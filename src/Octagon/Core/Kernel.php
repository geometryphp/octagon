<?php

namespace Octagon\Core;

use Octagon\Http\Request;
use Octagon\Http\Response;
use Octagon\Routing\Router;
use Octagon\Routing\RouteCollection;
use Octagon\Routing\Dispatcher;
use Octagon\Routing\Controller;
use Octagon\View\View;
use Octagon\Core\Registry;

/**
 * The Kernel handles the requests and application's response.
 *
 * The Kernel's job is to 1) resolve the controller delegated the task of
 * presenting a response to the request, 2) dispatch the controller once
 * found, and 3) return to the caller the response generated by the dispatched
 * controller.
 */

class Kernel
{
    /**
     * @const NAME The name of the kernel.
     */
    const NAME = "Octagon";

    /**
     * @const VERSION_MAJOR The version major.
     */
    const VERSION_MAJOR = 0;

    /**
     * @const VERSION_MINOR The version minor.
     */
    const VERSION_MINOR = 0;

    /**
     * @const VERSION_PATCH The version patch.
     */
    const VERSION_PATCH = 0;

    /**
     * Handle the request and return a response.
     *
     * This method resolves the controller delegated the task of presenting
     * a response to the request.
     *
     * @param \Octagon\Http\Request $request Request to handle.
     *
     * @return \Octagon\Routing\Response The response generated by the delegated controller.
     */
    public static function handle(Request $request)
    {
        // Get registry
        $registry = Registry::getInstance();

        // Load application routes
        $router = $registry->getRouter();
        $router->initialize(new RouteCollection);
        require CONFIG_DIRECTORY . SLASH . APP_ROUTE_FILE;

        // Find controller by request
        $controller = $router->getController($request);
        // If a controller was not found, report this error
        if ($controller === null) {
            // Push error
            $response = $registry->get404();
            $response->send();

            // TODO: Dump the route table here
            $errmsg = sprintf('The request "%s %s" does not match any route definition in the route-config file ("%s")', $request->getMethod(), $request->getUrl(), APP_ROUTE_FILE);
            trigger_error($errmsg, E_USER_ERROR);
        }

        // Dispatch the found controller
        $response = Dispatcher::dispatch($controller);

        // Return response
        return $response;
    }

    /**
     * Force shutdown.
     *
     * @return void
     */
    public static function abort()
    {
        die();
    }

    /**
     * Shutdown the kernel.
     *
     * @return void
     */
    public static function shutdown()
    {
        self::abort();
    }

    /**
     * Get kernel version string.
     *
     * @return string The version number.
     */
    public static function version()
    {
        return self::VERSION_MAJOR .".". self::VERSION_MINOR .".". self::VERSION_PATCH;
    }

}
